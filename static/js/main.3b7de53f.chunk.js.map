{"version":3,"sources":["components/Scoreboard/Scoreboard.js","components/Images/Images.js","App.js","index.js"],"names":["Scoreboard","props","react_default","a","createElement","class","className","current","best","Images","id","src","alt","name","onClick","handleClick","App","state","signs","images","clickedImages","currentScore","bestScore","shuffleImages","_this","map","Math","random","sort","b","handleScoreChange","userGuess","score","setState","Object","toConsumableArray","concat","length","console","log","indexOf","_this2","this","components_Scoreboard_Scoreboard","sign","components_Images_Images","key","image","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mQA0BeA,SAvBI,SAAAC,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACPH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCACXJ,EAAAC,EAAAC,cAAA,4BAGJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACXJ,EAAAC,EAAAC,cAAA,0BAGRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCACXJ,EAAAC,EAAAC,cAAA,UAAKH,EAAMM,UAGfL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACXJ,EAAAC,EAAAC,cAAA,UAAKH,EAAMO,WCZZC,EANA,SAAAR,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKM,GAAIT,EAAMS,GAAIC,IAAKV,EAAMU,IAAKC,IAAKX,EAAMY,KAAMC,QAAS,kBAAMb,EAAMc,YAAYd,EAAMS,KAAKJ,UAAU,4BCyFnGU,oNArFbC,MAAQ,CACNC,MAAOC,EACPC,cAAe,GACfC,aAAc,EACdC,UAAW,KAGbC,cAAgB,WA2Bd,OAHsBC,EAAKP,MAAMC,MAAMO,IAAI,SAAAtB,GAAC,MAAI,CAACuB,KAAKC,SAAUxB,KAC3DyB,KAAK,SAACzB,EAAG0B,GAAJ,OAAU1B,EAAE,GAAK0B,EAAE,KACxBJ,IAAI,SAAAtB,GAAC,OAAIA,EAAE,QAIlB2B,kBAAoB,SAACC,EAAWrB,GAC9B,IAAkB,IAAdqB,EAAoB,CACtB,IAAMC,EAAQR,EAAKP,MAAMI,aAAe,EACxCG,EAAKS,SAAS,CACZf,MAAOM,EAAKD,gBACZH,cAAcc,OAAAC,EAAA,EAAAD,CAAKV,EAAKP,MAAMG,eAAjBgB,OAAA,CAAgC1B,IAC7CW,aAAcW,EACdV,UAAWU,EAAQR,EAAKP,MAAMK,UAAYU,EAAQR,EAAKP,MAAMK,iBAG/DE,EAAKS,SAAS,CACZf,MAAOM,EAAKD,gBACZH,cAAe,GACfC,aAAc,IAIdG,EAAKP,MAAMG,cAAciB,QAAUb,EAAKP,MAAMC,MAAMmB,QACtDC,QAAQC,IAAI,UAIhBxB,YAAc,SAACL,GAEb,OADA4B,QAAQC,IAAIf,EAAKP,MAAMG,eACfI,EAAKP,MAAMG,cAAcoB,QAAQ9B,IACvC,KAAO,EACLc,EAAKM,mBAAkB,EAAMpB,GAC7B,MACF,QACEc,EAAKM,mBAAkB,6EAIpB,IAAAW,EAAAC,KACP,OACExC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAACuC,EAAD,CAAYpC,QAASmC,KAAKzB,MAAMI,aAAcb,KAAMkC,KAAKzB,MAAMK,YAC/DpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZoC,KAAKzB,MAAMC,MAAMO,IAAI,SAAAmB,GAAI,OACxB1C,EAAAC,EAAAC,cAACyC,EAAD,CAAOnC,GAAIkC,EAAKlC,GAAIoC,IAAKF,EAAKlC,GAAIC,IAAKiC,EAAKG,MAAOnC,IAAKgC,EAAK/B,KAAME,YAAa0B,EAAK1B,yBA9E/EiC,cCDlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3b7de53f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\nconst Scoreboard = props => (\n    <div class=\"scoreBoard\">\n        <div className=\"row\">\n            <div className=\"col s4 offset-s1 currentScore\">\n                <h1>Current Score</h1>\n            </div>\n\n            <div className=\"col s4 offset-s2 highScore\">\n                <h1>High Score</h1>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col s4 offset-s1 currentScore\">\n                <h2>{props.current}</h2>\n            </div>\n\n            <div className=\"col s4 offset-s2 highScore\">\n                <h2>{props.best}</h2>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Scoreboard;","import React from \"react\";\n\nconst Images = props => (\n    <div className=\"col s6 l3\">\n        <img id={props.id} src={props.src} alt={props.name} onClick={() => props.handleClick(props.id)} className=\"responsive-img center\"></img>\n    </div>\n);\n\nexport default Images;","import React, { Component } from \"react\";\nimport images from \"./images.json\";\nimport Scoreboard from \"./components/Scoreboard\";\nimport Image from \"./components/Images\";\nimport \"./index.css\"\n\nclass App extends Component {\n\n  state = {\n    signs: images,\n    clickedImages: [],\n    currentScore: 0,\n    bestScore: 0\n  }\n\n  shuffleImages = () => {\n    // Old Shuffle\n    //=================================================================\n\n    // let shuffledArray = this.state.signs;\n    // let counter = this.state.signs.length;\n    \n\n    // while (counter > 0) {\n    //     const randomIndex = Math.floor(Math.random() * counter);\n\n    //     counter = counter - 1;\n\n    //     let dataForSwap = shuffledArray[counter];\n    //     shuffledArray[counter] = shuffledArray[randomIndex];\n    //     shuffledArray[randomIndex] = dataForSwap;\n    // };\n\n    // return shuffledArray\n\n    //=================================================================\n\n    // New shuffle (Provided by Joshua Lebeouf https://github.com/HumanJBooF)\n\n    const shuffledArray = this.state.signs.map(a => [Math.random(), a])\n        .sort((a, b) => a[0] - b[0])\n        .map(a => a[1]);\n    return shuffledArray;\n  };\n\n  handleScoreChange = (userGuess, id) => {\n    if (userGuess === true) {\n      const score = this.state.currentScore + 1\n      this.setState({\n        signs: this.shuffleImages(),\n        clickedImages: [...this.state.clickedImages, id],\n        currentScore: score,\n        bestScore: score > this.state.bestScore ? score : this.state.bestScore \n      })\n    } else {\n      this.setState({\n        signs: this.shuffleImages(),\n        clickedImages: [],\n        currentScore: 0\n      })\n    }\n\n    if (this.state.clickedImages.length >= this.state.signs.length) {\n      console.log(\"win\")\n    }\n  }\n\n  handleClick = (id) => {\n    console.log(this.state.clickedImages)\n    switch (this.state.clickedImages.indexOf(id)) {\n      case (-1):\n        this.handleScoreChange(true, id);\n        break;\n      default:\n        this.handleScoreChange(false);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Scoreboard current={this.state.currentScore} best={this.state.bestScore} />\n        <div className=\"row\">\n          {this.state.signs.map(sign => (\n            <Image id={sign.id} key={sign.id} src={sign.image} alt={sign.name} handleClick={this.handleClick} />\n          ))}\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}